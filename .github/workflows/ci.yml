name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  ci:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [24.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint
    
    - name: Run tests
      run: npm run test:run
    
    - name: Build
      run: npm run build
      
    - name: Check if version has changed
      id: version_check
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
      run: |
        # Get the previous version from the last commit
        git fetch --depth=2
        if git diff --name-only HEAD~1 HEAD | grep -q "package.json"; then
          echo "package_json_changed=true" >> $GITHUB_OUTPUT
          PREV_VERSION=$(git show HEAD~1:package.json | grep '"version"' | sed -E 's/.*"([0-9.]+)".*/\1/')
          CURR_VERSION=$(grep '"version"' package.json | sed -E 's/.*"([0-9.]+)".*/\1/')
          echo "prev_version=$PREV_VERSION" >> $GITHUB_OUTPUT
          echo "curr_version=$CURR_VERSION" >> $GITHUB_OUTPUT
          if [ "$PREV_VERSION" != "$CURR_VERSION" ]; then
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "New version detected: $CURR_VERSION (previous: $PREV_VERSION)"
          else
            echo "version_changed=false" >> $GITHUB_OUTPUT
            echo "Version unchanged: $CURR_VERSION"
          fi
        else
          echo "package_json_changed=false" >> $GITHUB_OUTPUT
          echo "package.json not changed"
        fi
    
    - name: Publish to npm
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') && steps.version_check.outputs.version_changed == 'true'
      run: |
        echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
        npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}